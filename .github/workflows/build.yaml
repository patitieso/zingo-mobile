name: build

on:
  workflow_call:

runs:
  using: "composite"
  name: Build native rust (${{ matrix.abi }})
  runs-on: ubuntu-22.04
  strategy:
    matrix:
      include:
        - abi: x86
          target: i686-linux-android
          cc: i686-linux-android
          openssl_path: x86
        - abi: x86_64
          target: x86_64-linux-android
          cc: x86_64-linux-android
          openssl_path: x86_64
        - abi: armeabi-v7a
          target: armv7-linux-androideabi
          cc: armv7a-linux-androideabi
          openssl_path: armv7
        - abi: arm64-v8a
          target: aarch64-linux-android
          cc: aarch64-linux-android
          openssl_path: aarch64
  env:
    RUSTUP_HOME: /root/.rustup
  container:
    image: zingodevops/android_builder:stable
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Cargo cache
      uses: actions/cache@v3
      id: cargo-cache
      with:
        # TODO: ref paths from cargo
        path: |
          /root/.cargo/.crates.toml
          /root/.cargo/.crates2.json
          /root/.cargo/bin/
          /root/.cargo/registry/index/            
          /root/.cargo/registry/cache/
          /root/.cargo/registry/git/db/
        key: cargo-${{ matrix.abi }}-${{ hashFiles('rust/Cargo.lock') }}
        restore-keys: cargo-${{ matrix.abi }}
    
    - name: Cargo build
      working-directory: ./rust/android
      run: cargo +nightly build -Z build-std --target ${{ matrix.target }} --release
      env:
        AR: llvm-ar
        LD: ld
        RANLIB: llvm-ranlib
        CC: ${{ matrix.cc }}23-clang
        OPENSSL_DIR: /opt/openssl-3.0.5/${{ matrix.openssl_path }}
    
    - name: LLVM Strip
      working-directory: ./rust/target
      run: llvm-strip ./${{ matrix.target }}/release/librust.so
    
    - name: Upload native rust
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.abi }}-${{ env.timestamp }}
        path: rust/target/${{ matrix.target }}/release/librust.so
