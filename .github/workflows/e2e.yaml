name: CI

on:
  pull_request:
  push:

jobs:
  
  create-timestamp:
    uses: ./.github/workflows/timestamp.yaml

  build:
    uses: ./.github/workflows/build.yaml
  
  setup_emulator:
    uses: ./.github/workflows/avd.yaml@setup
  
  e2e_test:
    name: End-to-End Test
    runs-on: macos-12
    strategy:
      matrix:
        include:
          - arch : x86
            api-level: 29
            jniLibs_dir: x86
          - arch : x86_64
            api-level: 30
            jniLibs_dir: x86_64
    needs: [create-timestamp, build]
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.3
          build-root-directory: ./android
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' && github.ref != 'refs/pull/*' }}
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with: 
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.arch }}-api-${{ matrix.api-level }}      
      - name: Download native rust
        uses: actions/download-artifact@v3
        with: 
          name: ${{ matrix.arch }}-${{ env.timestamp }}
          path: android/app/src/main/jniLibs/${{ matrix.jniLibs_dir }}
      - run: yarn install
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: kill react-native
        run: killall node | echo
      - name: start react-native
        run: nohup yarn react-native start > "out.yarn_react_native_start" &
      - name: Run Detox Build
        run: yarn detox build -c android.emu.debug -n test
      - name: dismiss android dialogs
        run: adb shell am broadcast -a android.intent.action.CLOSE_SYSTEM_DIALOGS | echo 
      - name: Run Detox Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: yarn detox test -c android.emu.debug -n test
